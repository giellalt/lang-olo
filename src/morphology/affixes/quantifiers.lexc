!! Quantifier inflection
!! ---------------
!! Livvi quantifiers inflect for case.

LEXICON NUM_
+TYÄ+Num: # ;

LEXICON NUM_OZA
+Num+Card: NMN_OZA ;
+Num: ORD_01 ;

LEXICON NUM_MUARJU  !!= __@CODE@__ muarju:muarja
+Num+Card: NMN_MUARJU ;
+Num: ORD_01 ;

LEXICON NUM_SÄYNÄ
+Num+Card: NMN_SÄYNÄ ;

LEXICON NUM_SADA
+Num+Card+Sg@C.NUM-TYPE@.CARD@@C.DECL-NX@:%^WGStem00@C.NUM-TYPE@.CARD@@C.DECL-NX@ NUM-USUALLY-WEAK ;
+Num+Card+Sg@C.NUM-TYPE@.CARD@@C.DECL-NX@:000@C.NUM-TYPE@.CARD@@C.DECL-NX@ NUM-USUALLY-STRONG ;
+Num+Card+Pl@C.NUM-TYPE@.CARD@@C.DECL-NX@:%^WGStem00@C.NUM-TYPE@.CARD@@C.DECL-NX@ NUM-USUALLY-WEAK ;
+Num+Card+Pl@C.NUM-TYPE@.CARD@@C.DECL-NX@:000@C.NUM-TYPE@.CARD@@C.DECL-NX@ NUM-USUALLY-STRONG ;

LEXICON NUM_YKSI  !!= @CODE@ yksi:y
+Num+Card: NMN_YKSI ;

LEXICON NUM_KAKSI  !!= @CODE@ kaksi:ka
+Num+Card+Sg:ksi NUM-NOM ;
+Num+Card+Sg:h NUM-SG-PAR_tu ;
+Num+Card+Sg:hte NUM-USUALLY-WEAK ;
+Num+Card+Sg:hte NUM-USUALLY-STRONG ;
+Num+Card+Pl:htet NUM-NOM ;
+Num+Card+Pl:ksi NUM-PL-GEN_EN ;
+Num+Card+Pl:ksii NUM-PL-PAR_Zero ;
+Num+Card+Pl:ksi NUM-INS ;
+Num+Card+Pl:ksi NUM-USUALLY-WEAK ;
+Num+Card+Pl:ksi NUM-USUALLY-STRONG ;

LEXICON NUM_SEIČČIE  !!= @CODE@ seiččie:seičče
+Num+Card: NMN_SEIČČIE ;

LEXICON NUM_NELLI
+Num+Card: NMN_NELLI ;

LEXICON NUM_TUHAT
+Num+Card: NMN_TUHAT ;

LEXICON NUM_KARJALAINE !!= @CODE@ 
+Qnt+Num: NMN_KARJALAINE ;

LEXICON NUM_VUOZI !!= @CODE@ kuuzi:kuud, viizi:viid
+Num+Card: NMN_VUOZI ;
+Num:e ORD_01 ;

LEXICON NUM_KYMMENE !!= @CODE@ kymmene:kymmen
+Num+Card+Sg:e NUM-NOM ;
+Num+Card+Sg: NUM-SG-PAR_ty ;
+Num+Card+Sg:e NUM-USUALLY-WEAK ;
+Num+Card+Sg:e NUM-USUALLY-STRONG ;
+Num+Card+Pl:et NUM-NOM ;
+Num+Card+Pl:i NUM-PL-GEN_EN ;
+Num+Card+Pl:ii NUM-PL-PAR_Zero ;
+Num+Card+Pl:i NUM-INS ;
+Num+Card+Pl:i NUM-USUALLY-WEAK ;
+Num+Card+Pl:i NUM-USUALLY-STRONG ;


LEXICON NUM_KOLME !!= @CODE@ 
+Num+Card:e SGNOMSUF ;
+Num+Card:e SGGENSUF ;
+Num+Card:e SGPARSUF_A2 ;

+Num+Card+Sg:e Noun-NB-01 ;
+Num:a ORD_01 ;

LEXICON QNT_
+TYÄ+Qnt: # ;

LEXICON ORD_
+TYÄ+Num+Ord: # ;

LEXICON ORD_TOINE !!= @CODE@ toine:to
+Qnt+Ord: NMN_TOINE ;

LEXICON ORD_KARJALAINE !!= @CODE@ enzimäine:ensimä
+Qnt+Ord: NMN_KARJALAINE ;

LEXICON ORD_01
+Num+Ord+Sg+Nom:%^WGStem%>s K ;
+Num+Ord:%^WGStemt SGPARSUF_dU ;
+Num+Ord:%^WGStemn^NONEde SGGENSUF ;

+Num+Ord+Sg:%^WGStemn^NONEde Noun-NB-01 ;

+Num+Ord:%^WGStemn^NONEde PLNOMSUF ;

LEXICON NUM-USUALLY-WEAK
 NUM-ABE ;
 NUM-ABL ;
 NUM-ADE ;
 NUM-ALL ;
 NUM-ELA ;
 NUM-ESS ;
 NUM-INE ;
 NUM-PRL ;
 NUM-TRA ;

LEXICON NUM-USUALLY-STRONG
 NUM-ILL ;
 NUM-TER ;

LEXICON NUM-ABE
+Abe0000@U.DECL-CX.ABE@:%>tt%{aäPar%}h@U.DECL-CX.ABE@ SUBSEQUENT-NUM_OPT ;
+Abe00@U.DECL-CX.ABE@:%>t%{aäPar%}@U.DECL-CX.ABE@ SUBSEQUENT-NUM_OPT ;
+Abe+Err/Sub00@U.DECL-CX.ABE@:%>tt%{aäPar%}@U.DECL-CX.ABE@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-ABL
+Abl0000@U.DECL-CX.ABL@:%>lpäi@U.DECL-CX.ABL@ NO-SUBSEQUENT-NUM_OPT ;
+Abl0@U.DECL-CX.ABL@:%>l@U.DECL-CX.ABL@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-ADE
+Ade0@U.DECL-CX.ADE@:%>l@U.DECL-CX.ADE@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-ALL
+All00@U.DECL-CX.ALL@:%>le@U.DECL-CX.ALL@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-PL-GEN_EN
+Gen00@U.DECL-CX.GEN@:%>en@U.DECL-CX.GEN@ SUBSEQUENT-NUM_OPT ;
+Com0000@U.DECL-CX.COM@:%>enke@U.DECL-CX.COM@ SUBSEQUENT-NUM_OPT ;
+Apr00000@U.DECL-CX.APR@:%>ell%{uy%}%{oö%}@U.DECL-CX.APR@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-ELA
+Ela0000@U.DECL-CX.ELA@:%>späi@U.DECL-CX.ELA@ K ;
+Ela0@U.DECL-CX.ELA@:%>s@U.DECL-CX.ELA@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-ESS
+Ess000@U.DECL-CX.ESS@:%>nn%{uy%}@U.DECL-CX.ESS@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-ILL
+Ill0@U.DECL-CX.ILL@:%>h@U.DECL-CX.ILL@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-INE
+Ine0@U.DECL-CX.INE@:%>s@U.DECL-CX.INE@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-INS
+Ins0@U.DECL-CX.INS@:%>@U.DECL-CX.INS@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-NOM
+Nom@U.DECL-CX.NOM@:0@U.DECL-CX.NOM@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-SG-PAR_tu
+Par00@U.DECL-CX.PAR@:%>tu@U.DECL-CX.PAR@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-SG-PAR_ty
+Par00@U.DECL-CX.PAR@:%>ty@U.DECL-CX.PAR@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-PL-PAR_Zero
+Par@U.DECL-CX.PAR@:0@U.DECL-CX.PAR@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-PRL
+Prl00@U.DECL-CX.PRL@:%>či@U.DECL-CX.PRL@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-TER
+Ter0000@U.DECL-CX.TER@:%>ss%{aäPar%}h@U.DECL-CX.TER@ SUBSEQUENT-NUM_OPT ;

LEXICON NUM-TRA
+Tra000@U.DECL-CX.TRA@:%>kse@U.DECL-CX.TRA@ SUBSEQUENT-NUM_OPT ;


LEXICON NO-SUBSEQUENT-NUM_OPT
 K ;

LEXICON SUBSEQUENT-NUM_OPT
 K ;
tostu:tostu K ;
kymmene:#kymmen NUM_KYMMENE ;
sada:#sada NUM_SADA ;


! vim: set ft=xfst-lexc:

